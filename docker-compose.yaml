##
# Copyright ¬©Ô∏è Marcello DeSales - All Rights Reserved
# Unauthorized copying of this file, via any medium is strictly prohibited
# Proprietary and confidential for the purpose of Interview with Kraken's Engineering.
# Written by Marcello DeSales <marcello.desales@gmail.com>, April 2022.
##
version: "3.9"

# The local network created for the transactions
networks:
  blockchain-bitcoin:
    name: blockchain-bitcoin-net

services:

  #############
  # Postgres Database #
  #############
  postgres:
    container_name: bitcoin-transactions-postgres-server
    image: debezium/postgres:14-alpine
    user: postgres
    environment:
      SERVER_NAME: "üîã Postgres Database"
      POSTGRES_DB: bitcoin-transactions         # PostgreSQL database
      POSTGRES_USER: postgres                   # PostgreSQL user
      POSTGRES_PASSWORD: postgres               # PostgreSQL password
    ports:
      - 5432:5432
    volumes:
      - ./services/database/config:/docker-entrypoint-initdb.d
      #- ./services/database/data:/var/lib/postgresql/data
    networks:
      - blockchain-bitcoin
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 3
    logging:
      options:
        max-size: 10m
        max-file: "3"

  #############
  # postgrest Data Service #
  #############
  postgREST:
    container_name: bitcoin-transactions-postgres-data-service
    image: marcellodesales/kraken-blockchain-postgres-rest-wrapper
    build:
      context: services/database-rest-wrapper
      args:
        BASE_IMAGE: postgrest/postgrest:v9.0.0.20220211
    ports:
      - "4565:3000"
    # Available environment variables documented here:
    # https://postgrest.org/en/latest/configuration.html#environment-variables
    environment:
      # TODO: Not in use yet
      SERVER_NAME: "üëΩ TransactionsDataService"
      # The standard connection URI format, documented at
      # https://www.postgresql.org/docs/current/static/libpq-connect.html#LIBPQ-CONNSTRING
      PGRST_DB_URI: postgres://postgres:postgres@bitcoin-transactions-postgres-server:5432/bitcoin-transactions
      # The name of which database schema to expose to REST clients
      PGRST_DB_SCHEMA: bitcoin
      # The database role to use when no client authentication is provided
      PGRST_DB_ANON_ROLE: api_anon
      # Overrides the base URL used within the OpenAPI self-documentation hosted at the API root path
      PGRST_OPENAPI_SERVER_PROXY_URI: http://localhost:3000
    networks:
      - blockchain-bitcoin
    restart: always

    depends_on:
      postgres:
        condition: service_healthy

    # https://medium.com/geekculture/how-to-successfully-implement-a-healthcheck-in-docker-compose-efced60bc08e
    healthcheck:
      # docker exec -ti postgrest which wget ---> /usr/bin/wget, the internal port within the container
      test: wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1
      interval: 3s
      timeout: 5s
      retries: 3

  #############
  # Bitcoin Transactions reporter #
  #############
  transactions-watcher:
    container_name: bitcoin-transactions-data-watcher
    image: marcellodesales/kraken-blockchain-transactions-data-watcher
    build:
      context: services/bitcoin-transaction-files-watcher
      args:
        BASE_IMAGE: node:16.13.2-alpine3.14
    networks:
      - blockchain-bitcoin
    volumes:
      - ./data:/kraken/blockchain/bitcoin/listsinceblock/data
    # Available environment variables documented here:
    # https://postgrest.org/en/latest/configuration.html#environment-variables
    environment:
      TRANSACTIONS_WATCHER_ENV: development
      TRANSACTIONS_WATCHER_SERVICE_NAME: kraken-transactions-file-watcher
      TRANSACTIONS_WATCHER_API_VERSION: 1.0.0
      TRANSACTIONS_WATCHER_HEALTHCHECK_FILE_PATH: /tmp/kraken-transactions-healthcheck
      TRANSACTIONS_WATCHER_DIR_TO_WATCH: /kraken/blockchain/bitcoin/listsinceblock/data
      TRANSACTIONS_WATCHER_FILE_EXTENSION: .json
      TRANSACTIONS_DATA_SERVICE_ADDRESS: http://bitcoin-transactions-postgres-data-service:3000
    restart: "no"
    depends_on:
      postgREST:
        condition: service_healthy

    # https://stackoverflow.com/questions/42737957/how-to-view-docker-compose-healthcheck-logs/42738182#42738182
    # https://medium.com/geekculture/how-to-successfully-implement-a-healthcheck-in-docker-compose-efced60bc08e
    # https://stackoverflow.com/questions/40082346/how-to-check-if-a-file-exists-in-a-shell-script/57803080#57803080
    healthcheck:
      test: test -f /tmp/kraken-transactions-healthcheck
      interval: 10s
      timeout: 5s
      retries: 5
